This is METAFONT, Version 2.71828182 (preloaded base=mf 2022.12.19)  3 FEB 2023 18:59
**\mode:=ljfour; mag:=600/600; nonstopmode; input ectc0
(/home/cckisby/.texlive2021/texmf-var/fonts/source/jknappen/ec/ectc0.mf
(/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exbase.mf)
(/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/ectc.mf
(/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/excsc.mf
 Ok (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exaccess.mf
 Ok) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/expseudo.mf
 Ok) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exruwest.mf
 Ok
! Square root of -47.6981 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
<for(1)> ...o(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;penpos1(alpha*left_stem,0...
l.87 repeat_once
                ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...-apex_corr);penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.87 repeat_once
                ;
This error message was generated by an `errmessage'
command, so I can't give any explicit help.
Pretend that you're Miss Marple: Examine all clues,
and deduce the truth by inspired guesses.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...eft_stem,0);penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.87 repeat_once
                ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ft_stem,0);penpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.87 repeat_once
                ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ht_stem,0);penpos4(alpha*right_stem,0)
                                                  ;z0=whatever[z1r,z2r]=what...
l.87 repeat_once
                ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ....serifs:0.75u.else:0.25u.fi;put_gravis
                                                  ; ENDFOR
l.87 repeat_once
                ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ....serifs:0.75u.else:0.25u.fi;put_gravis
                                                  ; ENDFOR
l.87 repeat_once
                ;
(That was another `errmessage'.)

! Square root of -44.98077 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
<for(%CAPSULE10667)> ...m,y2-y1,x4r-x1l-apex_corr)
                                                  ;penpos1(alpha*left_stem,0...
l.87 repeat_once
                ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE10667)> ...penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.87 repeat_once
                ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE10667)> ...penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.87 repeat_once
                ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE10667)> ...enpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.87 repeat_once
                ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE10667)> ...enpos4(alpha*right_stem,0)
                                                  ;z0=whatever[z1r,z2r]=what...
l.87 repeat_once
                ;
(That was another `errmessage'.)

> 0 ESE 1 SSE SSW WSW 2 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW NNW NNE E
NE 6 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 10 11 WNW NNW NN
E ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE10667)> ...nd(2l,1l,1,1,1r,0)--cycle;
                                                  fi.penpos5(whatever,angle(...
l.87 repeat_once
                ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE10667)> ...p_band;penstroke.z5e--z6e;
                                                  if.serifs:numeric.inner_ju...
l.87 repeat_once
                ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10667)> ...ut,b,0.6,inner_jut)(dark);
                                                  dish_serif(4',3,c,1/2,inne...
l.87 repeat_once
                ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10667)> ...nner_jut,d,1/3,outer_jut);
                                                  fi.hpos_corr=if.not.serifs...
l.87 repeat_once
                ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10667)> ...u.else:0.25u.fi;put_gravis
                                                  ; ENDFOR
l.87 repeat_once
                ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10667)> ...u.else:0.25u.fi;put_gravis
                                                  ; ENDFOR
l.87 repeat_once
                ;
(That was another `errmessage'.)

[192]
! Square root of -47.6981 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
<for(1)> ...o(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;penpos1(alpha*left_stem,0...
l.124 repeat_once
                 ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...-apex_corr);penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...eft_stem,0);penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ft_stem,0);penpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ht_stem,0);penpos4(alpha*right_stem,0)
                                                  ;z0=whatever[z1r,z2r]=what...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...nospace:hpos_corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...nospace:hpos_corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! Square root of -44.98077 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
<for(%CAPSULE12134)> ...m,y2-y1,x4r-x1l-apex_corr)
                                                  ;penpos1(alpha*left_stem,0...
l.124 repeat_once
                 ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12134)> ...penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12134)> ...penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12134)> ...enpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12134)> ...enpos4(alpha*right_stem,0)
                                                  ;z0=whatever[z1r,z2r]=what...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

> 0 ESE 1 SSE SSW WSW 2 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW NNW NNE E
NE 6 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 10 11 WNW NNW NN
E ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE12134)> ...nd(2l,1l,1,1,1r,0)--cycle;
                                                  fi.penpos5(whatever,angle(...
l.124 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE12134)> ...p_band;penstroke.z5e--z6e;
                                                  if.serifs:numeric.inner_ju...
l.124 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12134)> ...ut,b,0.6,inner_jut)(dark);
                                                  dish_serif(4',3,c,1/2,inne...
l.124 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12134)> ...nner_jut,d,1/3,outer_jut);
                                                  fi.if.not.monospace:hpos_c...
l.124 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12134)> ..._corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12134)> ..._corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

[193]
! Square root of -44.98077 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.135 ...atio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.136 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.136 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.137 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.137 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
(That was another `errmessage'.)

> 0 ESE 1 SSE SSW WSW 2 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW NNW NNE E
NE 6 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 10 11 WNW NNW NN
E ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.144   --diag_end(2l,1l,1,1,1r,0)--cycle;
                                           fi % left and right diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.148 ...y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.153 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.154 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[194]
! Square root of -44.98077 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.168 ...atio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.169 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.169 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.170 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.170 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
(That was another `errmessage'.)

> 0 ESE 1 SSE SSW WSW 2 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW NNW NNE E
NE 6 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 10 11 WNW NNW NN
E ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.177   --diag_end(2l,1l,1,1,1r,0)--cycle;
                                           fi % left and right diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.181 ...y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.186 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.187 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by -48.00146).
<to be read again> 
                   ;
uppercase_tilde->...)]l);delta=whatever*dir.theta;
                                                  filldraw.z[(EXPR4)]l..cont...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> xpart delta+7
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-64.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-71
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta+0.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[195]
! Square root of -44.98077 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.201 ...atio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.202 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.202 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.203 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.203 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
(That was another `errmessage'.)

> 0 ESE 1 SSE SSW WSW 2 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW NNW NNE E
NE 6 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 10 11 WNW NNW NN
E ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.210   --diag_end(2l,1l,1,1,1r,0)--cycle;
                                           fi % left and right diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.214 ...y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.219 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.220 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[196]
! Square root of -44.98077 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.233 ...atio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.234 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.234 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.235 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.235 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
(That was another `errmessage'.)

> 0 ESE 1 SSE SSW WSW 2 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW NNW NNE E
NE 6 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 10 11 WNW NNW NN
E ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.242   --diag_end(2l,1l,1,1,1r,0)--cycle;
                                           fi % left and right diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.246 ...y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.251 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.252 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...enpos[(EXPR5)](circ_hair,180)
                                                  ;penpos[(EXPR7)](circ_hair...
l.254 uppercase_circle(x2,y2,12,13,14,15)
                                         ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...;penpos[(EXPR7)](circ_hair,0)
                                                  ;x[(EXPR4)]=x[(EXPR6)]=(EX...
l.254 uppercase_circle(x2,y2,12,13,14,15)
                                         ;
(That was another `errmessage'.)

[197]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.269 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.277 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.277 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.280 arm(8,9,h,beak_darkness,1.5beak_jut)
                                          ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

>> 14
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...p.numeric.a_,b_;b_=(EXPR3)/(EXPR4);
                                                  a_=(EXPR2)*(EXPR2)-b_*b_;(...
l.284 ...iag_ratio(1,.5left_stem,y12-y11,x12-x11l)
                                                  ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -195 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.284 ...iag_ratio(1,.5left_stem,y12-y11,x12-x11l)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -1.44772
! Division by zero.
<to be read again> 
                   endgroup
l.284 ...iag_ratio(1,.5left_stem,y12-y11,x12-x11l)
                                                  ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.285 penpos11(alpha*left_stem,0)
                                 ; penpos12(alpha*left_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.285 ...left_stem,0); penpos12(alpha*left_stem,0)
                                                  ;
(That was another `errmessage'.)

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+10.29373,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 10.29373
>> (-from_x+10.29373,14)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x+10.29373,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x-30.24252,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -30.24252
>> (-to_x-30.24252,14)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-30.24252,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x-28.79488,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -28.79488
>> (-from_x-28.79488,14)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x-28.79488,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x+11.74138,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 11.74138
>> (-to_x+11.74138,14)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x+11.74138,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 WNW NNW NNE NNW WNW 2 WSW SSW SSE ESE 4 ENE NNE NNW NNE ENE 6 ESE SSE SSW W
SW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.287  --diag_end(11r,12r,1,1,12l,11l)--cycle;
                                               % diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by 34).
<to be read again> 
                   ;
l.288 y10=h-slab; z10=whatever[z11,z12];
                                        
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x10
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.289 fill z10--
                (x1,y10)--(x1,h)--z12--cycle;  % link
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
l.292 if hefty: y14r=.4h;
                          else: y14=y0; fi
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x13r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(l)> path_(SUFFIX0):=z13(SUFFIX0)--
                                       z14(SUFFIX0); ENDFOR
penstroke->...ffixes.e=l,r:path_.e:=(TEXT0);endfor
                                                  .if.cycle.path_.l:cyclestr...
<to be read again> 
                   ;
l.293 penstroke z13e--z14e;
                            % bar line
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x13r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(r)> path_(SUFFIX0):=z13(SUFFIX0)--
                                       z14(SUFFIX0); ENDFOR
penstroke->...ffixes.e=l,r:path_.e:=(TEXT0);endfor
                                                  .if.cycle.path_.l:cyclestr...
<to be read again> 
                   ;
l.293 penstroke z13e--z14e;
                            % bar line
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by -28).
<to be read again> 
                   ;
l.295  prime_points_inside(11,12)
                                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x11'r+71.89244
! Unknown relation will be considered false.
<to be read again> 
                   :
l.296 ... x11'r+cap_jut+.5u+1<=lft x2l-.75cap_jut:
                                                   inner_jut=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11853
>> (-0.5x11'l-0.5x11'r-8.52675,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x11'l-0.5x11'r-8.52675,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.i2,8)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x11'l-0.5x11'r-8.52675,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x11'l,14)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10404
>> (-0.5x11'l-0.5x11'r-8.52675,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x11'l-0.5x11'r-8.52675,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x11'l-0.5x11'r-8.52675,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.i2-8.52724
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12963
>> (-0.5x11'l-0.5x11'r-8.52675,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.i2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x11'l+0.5x11'r+8.52675
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.i2-0.25x11'r-7.33679
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.i2+x11'l-12.29372
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x11'l-12.29372
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x11'l-12.29372
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x11'l+0.5x11'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11087
>> (-0.5x11'l-0.5x11'r-8.52675,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.57143x11'r-25.7143
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x11'l-0.5x11'r-8.52675,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.j2,8)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x11'l-0.5x11'r-8.52675,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x11'r,14)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10875
>> (-0.5x11'l-0.5x11'r-8.52675,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x11'l-0.5x11'r-8.52675,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x11'l-0.5x11'r-8.52675,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.j2-8.52626
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12761
>> (-0.5x11'l-0.5x11'r-8.52675,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.j2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x11'l+0.5x11'r+8.52675
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.j2-0.2x11'l-0.07143x11'r-11.12502
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.j2+0.42857x11'r-25.7143
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.57143x11'r-25.7143
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r-25.7143
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r-25.7143
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x11'l+0.5x11'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r+19.28572
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.07143x11'r-14.78528
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r+19.28572
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r+19.28572
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r+1.28621
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r+1.28621
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[198] [199]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...t(0,0.5ic#);hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.365 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...t(0,0.5ic#);hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.365 repeat_once
                 ;
(That was another `errmessage'.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE11025)> ...,e,beak_darkness,beak_jut)
                                                  ;pos5(cap_bar,-90);pos6(ha...
l.365 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE11025)> ...arm(5,6,f,beak_darkness,0)
                                                  ;arm(0,7,g,beak_darkness,0...
l.365 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE11025)> ...arm(0,7,g,beak_darkness,0)
                                                  ;pos8(slab.if.not.serifs:+...
l.365 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE11025)> ...beak_darkness,1.5beak_jut)
                                                  ;if.serifs:nodish_serif(1,...
l.365 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11025)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.365 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11025)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.365 repeat_once
                 ;
(That was another `errmessage'.)

[200]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ap_jut,d,1/3,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ap_jut,d,1/3,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
(That was another `errmessage'.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE9141)> ...4,e,beak_darkness,beak_jut)
                                                  ;pos5(cap_bar,-90);pos6(ha...
l.393 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE9141)> ....arm(5,6,f,beak_darkness,0)
                                                  ;arm(0,7,g,beak_darkness,0...
l.393 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE9141)> ...;arm(0,7,g,beak_darkness,0)
                                                  ;pos8(slab.if.not.serifs:+...
l.393 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE9141)> ...,beak_darkness,1.5beak_jut)
                                                  ;if.serifs:nodish_serif(1,...
l.393 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9141)> ...3,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9141)> ...3,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
(That was another `errmessage'.)

[201]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.408 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.416 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.416 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.419 arm(8,9,hh,beak_darkness,1.5beak_jut)
                                           ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[202]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.438 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.446 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.446 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.449 arm(8,9,hh,beak_darkness,1.5beak_jut)
                                           ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[203]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...it(0,0.5ic#);hpos_corr=0.5u;put_gravis
                                                  ; ENDFOR
l.482 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...it(0,0.5ic#);hpos_corr=0.5u;put_gravis
                                                  ; ENDFOR
l.482 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10627)> ...;hpos_corr=0.5u;put_gravis
                                                  ; ENDFOR
l.482 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10627)> ...;hpos_corr=0.5u;put_gravis
                                                  ; ENDFOR
l.482 repeat_once
                 ;
(That was another `errmessage'.)

[204]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ce:hpos_corr=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ce:hpos_corr=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12752)> ...=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12752)> ...=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
(That was another `errmessage'.)

[205] [206] [207] [208]
! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.614   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.614   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x-96.00024,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.614   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x-96.00024,14)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.614   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.616   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.616   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x+32.00024,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.616   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x+32.00024,14)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.616   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

> 0 ESE SSE SSW WSW 1 WNW NNW NNE ENE 2 3 ESE 4 ENE NNE NNW WNW 5 WSW 0 (SSW SS
E)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.616   {z5-z6}diag_in(6r,5r,1,5l)--cycle;
                                            % diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by -48.00146).
<to be read again> 
                   ;
uppercase_tilde->...)]l);delta=whatever*dir.theta;
                                                  filldraw.z[(EXPR4)]l..cont...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> xpart delta+7
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-64.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-71
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta+0.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[209]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,ic#-0.5u#);hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.649 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...,ic#-0.5u#);hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.649 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12034)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.649 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12034)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.649 repeat_once
                 ;
(That was another `errmessage'.)

[210]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...s(1,2,3,4);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...s(1,2,3,4);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12219)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12219)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
(That was another `errmessage'.)

[211] [212]
! Inconsistent equation (off by -48.00146).
<to be read again> 
                   ;
uppercase_tilde->...)]l);delta=whatever*dir.theta;
                                                  filldraw.z[(EXPR4)]l..cont...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> xpart delta+7
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-64.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-71
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta+0.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[213] [214]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.744 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.752 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.752 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.755 arm(8,9,h,beak_darkness,1.5beak_jut)
                                          ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[215] [216]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...#-0.5u#,0));hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.812 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...#-0.5u#,0));hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.812 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11145)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.812 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11145)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.812 repeat_once
                 ;
(That was another `errmessage'.)

[217]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...jut,d,1/2,cap_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...jut,d,1/2,cap_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12956)> ...p_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12956)> ...p_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
(That was another `errmessage'.)

[218] [219] [220]
>> 273.11194
! Division by zero.
<to be read again> 
                   ;
<for(1)> ...ght;dy=y1-y2;alpha=((x2l-x1l)++dy)/dy;
                                                  penpos1(alpha*left_stem,0)...
l.916 repeat_once
                 ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Arithmetic overflow.
<for(1)> ...-x1l)++dy)/dy;penpos1(alpha*left_stem,
                                                  0);penpos2(alpha*left_stem...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Value is too large (-32707.88808).
penpos->...y(SUFFIX2)l)=((EXPR3),0)rotated(EXPR4);
                                                  x(SUFFIX2)=0.5(x(SUFFIX2)l...
<for(1)> ...1l)++dy)/dy;penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-16323.88808).
penpos->...(SUFFIX2)=0.5(x(SUFFIX2)l+x(SUFFIX2)r);
                                                  y(SUFFIX2)=0.5(y(SUFFIX2)l...
<for(1)> ...1l)++dy)/dy;penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Arithmetic overflow.
<for(1)> ...*left_stem,0);penpos2(alpha*left_stem,
                                                  0);penpos3(alpha*right_ste...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Value is too large (32554.99998).
penpos->...y(SUFFIX2)l)=((EXPR3),0)rotated(EXPR4);
                                                  x(SUFFIX2)=0.5(x(SUFFIX2)l...
<for(1)> ...eft_stem,0);penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (16171).
penpos->...(SUFFIX2)=0.5(x(SUFFIX2)l+x(SUFFIX2)r);
                                                  y(SUFFIX2)=0.5(y(SUFFIX2)l...
<for(1)> ...eft_stem,0);penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Arithmetic overflow.
<for(1)> ...left_stem,0);penpos3(alpha*right_stem,
                                                  0);penpos4(alpha*right_ste...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Arithmetic overflow.
<for(1)> ...ight_stem,0);penpos4(alpha*right_stem,
                                                  0);penpos5(left_stem,0);pe...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Value is too large (32431.88808).
penpos->...y(SUFFIX2)l)=((EXPR3),0)rotated(EXPR4);
                                                  x(SUFFIX2)=0.5(x(SUFFIX2)l...
<for(1)> ...ht_stem,0);penpos4(alpha*right_stem,0)
                                                  ;penpos5(left_stem,0);penp...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (16047.88808).
penpos->...(SUFFIX2)=0.5(x(SUFFIX2)l+x(SUFFIX2)r);
                                                  y(SUFFIX2)=0.5(y(SUFFIX2)l...
<for(1)> ...ht_stem,0);penpos4(alpha*right_stem,0)
                                                  ;penpos5(left_stem,0);penp...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-16446).
penpos->...y(SUFFIX2)l)=((EXPR3),0)rotated(EXPR4);
                                                  x(SUFFIX2)=0.5(x(SUFFIX2)l...
<for(1)> ...pha*right_stem,0);penpos5(left_stem,0)
                                                  ;penpos6(left_stem,0);x5=x...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-32767.99998).
penpos->...y(SUFFIX2)l)=((EXPR3),0)rotated(EXPR4);
                                                  x(SUFFIX2)=0.5(x(SUFFIX2)l...
<for(1)> ...pha*right_stem,0);penpos5(left_stem,0)
                                                  ;penpos6(left_stem,0);x5=x...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Arithmetic overflow.
penpos->...y(SUFFIX2)l)=((EXPR3),0)rotated(EXPR4);
                                                  x(SUFFIX2)=0.5(x(SUFFIX2)l...
<for(1)> ...pha*right_stem,0);penpos5(left_stem,0)
                                                  ;penpos6(left_stem,0);x5=x...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Arithmetic overflow.
<recently read> ]
                 
<for(1)> ...tem,0);x5=x6;y6=0;z0=whatever[z1r,z2r]
                                                  =whatever[z3l,z4l];if.y0>y...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Arithmetic overflow.
<recently read> ]
                 
<for(1)> ...z0=whatever[z1r,z2r]=whatever[z3l,z4l]
                                                  ;if.y0>y2+cap_notch_cut:y0...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(1)> ...{down}z0+0.5left--cycle;else:fill.z0--
                                                  diag_end(0,4l,1,1,4r,3r)--...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11283
>> (-x0+32431.88808,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Value is too large (32431.88808).
<recently read> ;
                 
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Arithmetic overflow.
diag_end->...z(SUFFIX7)];if.x(SUFFIX6)>x(SUFFIX3):
                                                  x_=x(SUFFIX3)+(EXPR4)*leng...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Value is too large (32370.88808).
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

>> (-to_x-336.11194,61)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -336.11194
>> (-to_x-336.11194,61)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-336.11194,61)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-32370.88808
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0+32431.88808
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Arithmetic overflow.
<recently read> }
                 
diag_end->...z(SUFFIX2)}...{z(SUFFIX6)-z(SUFFIX3)}
                                                  (x_,y(SUFFIX3))..(xx_,y(SU...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Arithmetic overflow.
<recently read> }
                 
diag_end->...x_,y(SUFFIX3)){z(SUFFIX6)-z(SUFFIX3)}
                                                  ...{z(SUFFIX7)-z(SUFFIX6)}...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(1)> ...4r,3r)--z5r--diag_end(5r,6r,1,1,6l,5l)
                                                  --z5l--diag_end(2l,1l,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(1)> ...4r,3r)--z5r--diag_end(5r,6r,1,1,6l,5l)
                                                  --z5l--diag_end(2l,1l,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE12511
>> (x0+32707.88808,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Arithmetic overflow.
diag_end->...z(SUFFIX7)];if.x(SUFFIX6)>x(SUFFIX3):
                                                  x_=x(SUFFIX3)+(EXPR4)*leng...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

>> (-from_x+60.11194,61)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 60.11194
>> (-from_x+60.11194,61)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x+60.11194,61)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0-32707.88808,61)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -32707.88808
>> (-x0-32707.88808,61)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0-32707.88808,61)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Arithmetic overflow.
<recently read> }
                 
diag_end->...z(SUFFIX2)}...{z(SUFFIX6)-z(SUFFIX3)}
                                                  (x_,y(SUFFIX3))..(xx_,y(SU...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Arithmetic overflow.
<recently read> }
                 
diag_end->...x_,y(SUFFIX3)){z(SUFFIX6)-z(SUFFIX3)}
                                                  ...{z(SUFFIX7)-z(SUFFIX6)}...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

>> x0+32707.88808
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Arithmetic overflow.
<recently read> )
                 
prime_points_inside->...e(z(SUFFIX0)r-z(SUFFIX0)l)
                                                  ;penpos(SUFFIX0)'(whatever...
<for(1)> ...ckup.tiny.nib;prime_points_inside(1,2)
                                                  ;prime_points_inside(4,3);...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Arithmetic overflow.
<recently read> ]
                 
prime_points_inside->...r[z(SUFFIX0)l,z(SUFFIX0)r]
                                                  ;theta_:=angle(z(SUFFIX1)-...
<for(1)> ...ckup.tiny.nib;prime_points_inside(1,2)
                                                  ;prime_points_inside(4,3);...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Inconsistent equation (off by -122).
<to be read again> 
                   ;
<for(1)> ...ckup.tiny.nib;prime_points_inside(1,2)
                                                  ;prime_points_inside(4,3);...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Arithmetic overflow.
<recently read> )
                 
prime_points_inside->...e(z(SUFFIX0)r-z(SUFFIX0)l)
                                                  ;penpos(SUFFIX0)'(whatever...
<for(1)> ...s_inside(1,2);prime_points_inside(4,3)
                                                  ;prime_points_inside(6,5);...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Arithmetic overflow.
<recently read> ]
                 
prime_points_inside->...r[z(SUFFIX0)l,z(SUFFIX0)r]
                                                  ;theta_:=angle(z(SUFFIX1)-...
<for(1)> ...s_inside(1,2);prime_points_inside(4,3)
                                                  ;prime_points_inside(6,5);...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Inconsistent equation (off by -122).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
<for(1)> ...s_inside(1,2);prime_points_inside(4,3)
                                                  ;prime_points_inside(6,5);...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...le(z(SUFFIX1)-z(SUFFIX0))+
                                                  90;fi.z(SUFFIX0)'l+(pen_lf...
<for(1)> ...s_inside(4,3);prime_points_inside(6,5)
                                                  ;if.rt.x1'r+cap_jut+0.5u+1...
l.916 repeat_once
                 ;
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Inconsistent equation (off by 122).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
<for(1)> ...s_inside(4,3);prime_points_inside(6,5)
                                                  ;if.rt.x1'r+cap_jut+0.5u+1...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r+275.51413
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(1)> ...x1'r+cap_jut+0.5u+1<=lft.x4'l-cap_jut:
                                                  inner_jut=cap_jut;else:rt....
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10070
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -35).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Value is too large (16171).
<recently read> ;
                 
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

>> (-0.5x1'l-0.5x1'r+16171,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,35)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x1'l-0.5x1'r+16171,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,61)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10647
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2+16170.99951
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11670
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -61).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-16171
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2-0.16667x1'l-0.33334x1'r+10770.55348
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-61.17352
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-61.17352
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-61.17352
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12600
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -35).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Value is too large (16171).
<recently read> ;
                 
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

>> 0.5x4'l-0.5x1'r-56.19237
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x1'l-0.5x1'r+16171,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,35)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x1'l-0.5x1'r+16171,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,61)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9099
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2+16171.00049
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11063
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -61).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-16171
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l-0.25x1'l-0.125x1'r+8071.4519
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r-56.19237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r-56.19237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-56.19237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-56.19237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12974
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -35).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Value is too large (-16446).
<recently read> ;
                 
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

>> -0.5x4'l+0.5x1'r+56.19237
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x4'l-0.5x4'r-16446,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,35)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-16446,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,61)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12608
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-16445.99951
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10149
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -61).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+16446
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2-0.35x4'l+0.1x4'r+0.15001x1'r-6561.44174
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r+56.19237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r+56.19237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+56.19237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+56.19237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9579
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -35).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Value is too large (-16446).
<recently read> ;
                 
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

>> (-0.5x4'l-0.5x4'r-16446,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,35)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-16446,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,61)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE414
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-16445.99951
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9743
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -61).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+16446
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2-0.25x4'l-8207.70662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+61.17352
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+61.17352
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+61.17352
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...3,cap_jut,f,1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...3,cap_jut,f,1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
(That was another `errmessage'.)

>> 62.9389
! Division by zero.
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...2;alpha=((x2l-x1l)++dy)/dy;
                                                  penpos1(alpha*left_stem,0)...
l.916 repeat_once
                 ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(%CAPSULE9414)> ...5left--cycle;else:fill.z0--
                                                  diag_end(0,4l,1,1,4r,3r)--...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10284
>> (-x0-2280.80054,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
<for(%CAPSULE9414)> ...0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(%CAPSULE9414)> ...0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(%CAPSULE9414)> ...0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-77.9389,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE9414)> ...0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -77.9389
>> (-to_x-77.9389,14)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE9414)> ...0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-77.9389,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE9414)> ...0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+2266.80054
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
<for(%CAPSULE9414)> ...0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0-2280.80054
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
<for(%CAPSULE9414)> ...0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
<for(%CAPSULE9414)> ...0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
<for(%CAPSULE9414)> ...0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(%CAPSULE9414)> ...--diag_end(5r,6r,1,1,6l,5l)
                                                  --z5l--diag_end(2l,1l,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(%CAPSULE9414)> ...--diag_end(5r,6r,1,1,6l,5l)
                                                  --z5l--diag_end(2l,1l,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(%CAPSULE9414)> ...l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE12712
>> (x0-2216.80054,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
<for(%CAPSULE9414)> ...l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(%CAPSULE9414)> ...l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+13.9389,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(%CAPSULE9414)> ...l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 13.9389
>> (-from_x+13.9389,14)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(%CAPSULE9414)> ...l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x+13.9389,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(%CAPSULE9414)> ...l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0+2216.80054,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE9414)> ...l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 2216.80054
>> (-x0+2216.80054,14)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE9414)> ...l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0+2216.80054,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE9414)> ...l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
<for(%CAPSULE9414)> ...l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
<for(%CAPSULE9414)> ...l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
<for(%CAPSULE9414)> ...l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
<for(%CAPSULE9414)> ...l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-2216.80054
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
<for(%CAPSULE9414)> ...l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
<for(%CAPSULE9414)> ...l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 28).
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...ib;prime_points_inside(1,2)
                                                  ;prime_points_inside(4,3);...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 28).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
<for(%CAPSULE9414)> ...2);prime_points_inside(4,3)
                                                  ;prime_points_inside(6,5);...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...le(z(SUFFIX1)-z(SUFFIX0))+
                                                  90;fi.z(SUFFIX0)'l+(pen_lf...
<for(%CAPSULE9414)> ...3);prime_points_inside(6,5)
                                                  ;if.rt.x1'r+cap_jut+0.5u+1...
l.916 repeat_once
                 ;
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Inconsistent equation (off by 28).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
<for(%CAPSULE9414)> ...3);prime_points_inside(6,5)
                                                  ;if.rt.x1'r+cap_jut+0.5u+1...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r+64.3653
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(%CAPSULE9414)> ...t+0.5u+1<=lft.x4'l-cap_jut:
                                                  inner_jut=cap_jut;else:rt....
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE1434
>> (-0.5x1'l-0.5x1'r+1052.43082,14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x1'l+0.5x1'r-1052.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,-8)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-1052.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,-14)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9736
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2+1052.43033
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10412
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-1052.43082
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2+0.5x1'l+0.33334x1'r-703.99004
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12383
>> (-0.5x1'l-0.5x1'r+1052.43082,14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x1'r-13.26923
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x1'l+0.5x1'r-1052.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,-8)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-1052.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-14)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE8236
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2+1052.4313
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11756
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-1052.43082
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l+0.25x1'l+0.375x1'r-529.53271
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12426
>> (-0.5x4'l-0.5x4'r-1115.43082,14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x1'r+13.26923
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x4'l+0.5x4'r+1115.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,-8)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+1115.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-14)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE1443
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-1115.43033
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11885
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+1115.43082
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2+0.05x4'l+0.5x4'r+0.15001x1'r+450.14633
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10796
>> (-0.5x4'l-0.5x4'r-1115.43082,14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x4'l+0.5x4'r+1115.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,-8)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+1115.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-14)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9217
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-1115.43033
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11259
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+1115.43082
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2+0.25x4'l+0.5x4'r+561.26167
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE9414)> ...jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9414)> ...,1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9414)> ...,1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
(That was another `errmessage'.)

[221] [222]
> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.970 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[223]) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exrueast.mf
 Ok
! Square root of -44.98077 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.66 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.67 penpos1(alpha*left_stem,0)
                               ; penpos2(alpha*left_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.67 ...a*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.68 penpos3(alpha*right_stem,0)
                                ; penpos4(alpha*right_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.68 ...right_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
(That was another `errmessage'.)

> 0 ESE 1 SSE SSW WSW 2 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW NNW NNE E
NE 6 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 10 11 WNW NNW NN
E ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.75   --diag_end(2l,1l,1,1,1r,0)--cycle;
                                          fi % left and right diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.79 y5r-y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.84 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.85 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_breve->...os[(EXPR5)](mid_thickness,-90)
                                                  ;bot.y[(EXPR5)]r=cap_heigh...
l.87 uppercase_breve(x2,0,12,13,14)
                                   ;
(That was another `errmessage'.)

[128]
! Square root of -44.98077 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.100 ...atio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.101  penpos1(alpha*left_stem,0)
                                 ; penpos2(alpha*left_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.101 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.102  penpos3(alpha*right_stem,0)
                                  ; penpos4(alpha*right_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.102 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
(That was another `errmessage'.)

> 0 ESE 1 SSE SSW WSW 2 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW NNW NNE E
NE 6 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 10 11 WNW NNW NN
E ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.109    --diag_end(2l,1l,1,1,1r,0)--cycle;
                                            fi % left and right diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.113 ...y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.118 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                   % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.119 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );y_right':=ypart(bot(dire...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );if.abs(x_down'-x_down,y_...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

ERROR: `ogonek' iteration hasn't converged! Final values:
x_down=-12.28726 (should be 20)
y_right=-0.00024 (should be 0)
! Probably, you have to change somehow the boundary values.
<to be read again> 
                   ;
put_ogonek->...hange somehow the boundary values";
                                                  fi.z[ii]l=z_a;z[ii]'l=lo.z...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

[129]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...e;penlabels(1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...e;penlabels(1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11082)> ...1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11082)> ...1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

[130] [131] [132]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.240 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.248 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.248 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.251 arm(8,9,hh,beak_darkness,1.5beak_jut)
                                           ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[133]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.269  arm(3,4,e,beak_darkness,beak_jut)
                                        ; % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.277  arm(5,6,f,beak_darkness,0)
                                 ; arm(0,7,g,beak_darkness,0); % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.277 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ; % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.280  arm(8,9,h,beak_darkness,1.5beak_jut)
                                           ; % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );y_right':=ypart(bot(dire...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );if.abs(x_down'-x_down,y_...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

ERROR: `ogonek' iteration hasn't converged! Final values:
x_down=-61.28726 (should be -29)
y_right=-0.00024 (should be 0)
! Probably, you have to change somehow the boundary values.
<to be read again> 
                   ;
put_ogonek->...hange somehow the boundary values";
                                                  fi.z[ii]l=z_a;z[ii]'l=lo.z...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

[134]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_breve->...os[(EXPR5)](mid_thickness,-90)
                                                  ;bot.y[(EXPR5)]r=cap_heigh...
l.341 uppercase_breve(x2,0,10,11,12)
                                    ;
Maybe Jackowski knows how to change them...

[135]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ound.max(2u,3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ound.max(2u,3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE12236)> ...1.2beak_darkness,beak_jut)
                                                  ;if.serifs:dish_serif(1,2,...
l.359 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12236)> ...3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12236)> ...3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[136]
> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.371 arm(3,4,e,1.2beak_darkness,beak_jut)
                                          ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...

dtl_hachek->...t_diam,0.25accent_u,2/3comma_depth)
                                                  ;penlabels(51);
l.375 dtl_hachek(x4-pdot_diam)(y1+.5pdot_diam)
                                              ;
Maybe Jackowski knows how to change them...

[137]
> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE12905)> ...1.2beak_darkness,beak_jut)
                                                  ;if.serifs:dish_serif(1,2,...
l.393 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[138]
! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
<for(1)> ...){down}...fi{z6-z5}diag_in(5l,6l,1,6r)
                                                  --z6r..if.y4'>lower_notch:...
l.429 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
<for(1)> ...){down}...fi{z6-z5}diag_in(5l,6l,1,6r)
                                                  --z6r..if.y4'>lower_notch:...
l.429 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x-417.00024,61)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
<for(1)> ...){down}...fi{z6-z5}diag_in(5l,6l,1,6r)
                                                  --z6r..if.y4'>lower_notch:...
l.429 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x-417.00024,61)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
<for(1)> ...){down}...fi{z6-z5}diag_in(5l,6l,1,6r)
                                                  --z6r..if.y4'>lower_notch:...
l.429 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
<for(1)> ...ch){up}...fi{z5-z6}diag_in(6r,5r,1,5l)
                                                  --cycle;else:penpos5(whate...
l.429 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
<for(1)> ...ch){up}...fi{z5-z6}diag_in(6r,5r,1,5l)
                                                  --cycle;else:penpos5(whate...
l.429 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x+141.00024,61)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
<for(1)> ...ch){up}...fi{z5-z6}diag_in(6r,5r,1,5l)
                                                  --cycle;else:penpos5(whate...
l.429 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x+141.00024,61)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
<for(1)> ...ch){up}...fi{z5-z6}diag_in(6r,5r,1,5l)
                                                  --cycle;else:penpos5(whate...
l.429 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,4',5,6,7);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...,4',5,6,7);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
<for(%CAPSULE9958)> ...i{z6-z5}diag_in(5l,6l,1,6r)
                                                  --z6r..if.y4'>lower_notch:...
l.429 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
<for(%CAPSULE9958)> ...i{z6-z5}diag_in(5l,6l,1,6r)
                                                  --z6r..if.y4'>lower_notch:...
l.429 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x-96.00024,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
<for(%CAPSULE9958)> ...i{z6-z5}diag_in(5l,6l,1,6r)
                                                  --z6r..if.y4'>lower_notch:...
l.429 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x-96.00024,14)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
<for(%CAPSULE9958)> ...i{z6-z5}diag_in(5l,6l,1,6r)
                                                  --z6r..if.y4'>lower_notch:...
l.429 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
<for(%CAPSULE9958)> ...i{z5-z6}diag_in(6r,5r,1,5l)
                                                  --cycle;else:penpos5(whate...
l.429 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
<for(%CAPSULE9958)> ...i{z5-z6}diag_in(6r,5r,1,5l)
                                                  --cycle;else:penpos5(whate...
l.429 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x+32.00024,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
<for(%CAPSULE9958)> ...i{z5-z6}diag_in(6r,5r,1,5l)
                                                  --cycle;else:penpos5(whate...
l.429 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x+32.00024,14)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
<for(%CAPSULE9958)> ...i{z5-z6}diag_in(6r,5r,1,5l)
                                                  --cycle;else:penpos5(whate...
l.429 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

> 0 ESE SSE SSW WSW 1 WNW NNW NNE ENE 2 3 ESE 4 ENE NNE NNW WNW 5 WSW 0 (SSW SS
E)
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE9958)> ...diag_in(6r,5r,1,5l)--cycle;
                                                  else:penpos5(whatever,0);p...
l.429 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9958)> ...hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9958)> ...hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[139]
! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.451   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.451   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x-96.00024,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.451   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x-96.00024,14)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.451   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.453   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.453   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x+32.00024,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.453   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x+32.00024,14)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.453   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

> 0 ESE SSE SSW WSW 1 WNW NNW NNE ENE 2 3 ESE 4 ENE NNE NNW WNW 5 WSW 0 (SSW SS
E)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.453   {z5-z6}diag_in(6r,5r,1,5l)--cycle;
                                            % diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[140]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.475  pos5(flare+(cap_stem-stem),-180)
                                       ;
Maybe Jackowski knows how to change them...

[141]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...f.monospace:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...f.monospace:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...u;put_accent;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...u;put_accent;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE1399)> ...:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE1399)> ...:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE1399)> ...t;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE1399)> ...t;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[142]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...--cycle;fi.hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...--cycle;fi.hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12404)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12404)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[143] [144]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...6,7,8,8',9,10);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...6,7,8,8',9,10);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE12070)> ...1,10(y2-y1)}....{left}z2e;
                                                  filldraw.stroke.z7e{left}....
l.625 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12070)> ...0);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12070)> ...0);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[145]
> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.649 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[146]
> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.691 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[147]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.725 arm(3,4,e,beak_darkness,.7beak_jut)
                                         ;  % right arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.727 arm(3,5,f,beak_darkness,-.7beak_jut)
                                          ;  % left arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[148]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.745 arm(3,4,e,beak_darkness,.7beak_jut)
                                         ;  % right arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.747 arm(3,5,f,beak_darkness,-.7beak_jut)
                                          ;  % left arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[149]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...f.monospace:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...f.monospace:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...u;put_accent;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...u;put_accent;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11614)> ...hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11614)> ...hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11614)> ...;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11614)> ...;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[150]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...enpos[(EXPR5)](circ_hair,180)
                                                  ;penpos[(EXPR7)](circ_hair...
l.802 ...ght+if hefty: .5 fi accent_gap,8,9,10,11)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...;penpos[(EXPR7)](circ_hair,0)
                                                  ;x[(EXPR4)]=x[(EXPR6)]=(EX...
l.802 ...ght+if hefty: .5 fi accent_gap,8,9,10,11)
                                                  ;
Maybe Jackowski knows how to change them...

[151]
>> 62.9389
! Division by zero.
<to be read again> 
                   ;
l.816 dy=y1-y2; alpha=((x2l-x1l)++dy)/dy;
                                         
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.825 else: fill z0--
                     diag_end(0,4l,1,1,4r,3r)--z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9196
>> (-x0-2280.80054,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-77.9389,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -77.9389
>> (-to_x-77.9389,14)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-77.9389,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+2266.80054
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0-2280.80054
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.826     --diag_end(5r,6r,1,1,6l,5l)
                                     --z5l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.826     --diag_end(5r,6r,1,1,6l,5l)
                                     --z5l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE10815
>> (x0-2216.80054,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+13.9389,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 13.9389
>> (-from_x+13.9389,14)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x+13.9389,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0+2216.80054,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 2216.80054
>> (-x0+2216.80054,14)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0+2216.80054,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-2216.80054
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 28).
<to be read again> 
                   ;
l.829  prime_points_inside(1,2)
                               ; prime_points_inside(4,3); prime_points_insi...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 28).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.829 ...nts_inside(1,2); prime_points_inside(4,3)
                                                  ; prime_points_inside(6,5);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...le(z(SUFFIX1)-z(SUFFIX0))+
                                                  90;fi.z(SUFFIX0)'l+(pen_lf...
l.829 ...nts_inside(4,3); prime_points_inside(6,5)
                                                  ;
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Inconsistent equation (off by 28).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.829 ...nts_inside(4,3); prime_points_inside(6,5)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r+64.3653
! Unknown relation will be considered false.
<to be read again> 
                   :
l.830  if rt x1'r+cap_jut+.5u+1<=lft x4'l-cap_jut:
                                                   inner_jut=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12610
>> (-0.5x1'l-0.5x1'r+1052.43082,14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x1'l+0.5x1'r-1052.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,-8)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-1052.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,-14)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12986
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2+1052.43033
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12104
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-1052.43082
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2+0.5x1'l+0.33334x1'r-703.99004
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11669
>> (-0.5x1'l-0.5x1'r+1052.43082,14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x1'r-13.26923
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x1'l+0.5x1'r-1052.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,-8)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-1052.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-14)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9246
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2+1052.4313
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9855
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-1052.43082
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l+0.25x1'l+0.375x1'r-529.53271
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11632
>> (-0.5x4'l-0.5x4'r-1115.43082,14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x1'r+13.26923
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x4'l+0.5x4'r+1115.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,-8)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+1115.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-14)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10018
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-1115.43033
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10264
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+1115.43082
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2+0.05x4'l+0.5x4'r+0.15001x1'r+450.14633
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11839
>> (-0.5x4'l-0.5x4'r-1115.43082,14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x4'l+0.5x4'r+1115.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,-8)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+1115.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-14)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE8201
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-1115.43033
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12588
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+1115.43082
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2+0.25x4'l+0.5x4'r+561.26167
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[152]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...2r-x3l);penpos1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,4,5,6,7,8);hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...,4,5,6,7,8);hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11580)> ...os1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11580)> ...os2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11580)> ...os3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11580)> ...os4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE11580)> ...arkness**0.8,-0.4beak_jut)
                                                  ;pos7(arm_thickness2,-90);...
l.867 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE11580)> ...darkness**0.9,0.6beak_jut)
                                                  ;penlabels(1,2,3,4,5,6,7,8...
l.867 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11580)> ...hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11580)> ...hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[153]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.883 penpos1(alpha*(z_stem-tiny),0)
                                    ; penpos2(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.883 ...-tiny),0); penpos2(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.884 penpos3(alpha*(z_stem-tiny),0)
                                    ; penpos4(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.884 ...-tiny),0); penpos4(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.891 arm(5,6,a,beak_darkness**.8,-.4beak_jut)
                                              ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.894 arm(7,8,b,beak_darkness**.9,.6beak_jut)
                                             ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[154]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...2r-x3l);penpos1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9952)> ...pos1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9952)> ...pos2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9952)> ...pos3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9952)> ...pos4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE9952)> ...darkness**0.8,-0.4beak_jut)
                                                  ;pos7(arm_thickness2,-90);...
l.927 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE9952)> ..._darkness**0.9,0.6beak_jut)
                                                  ;penlabels(1,2,3,4,5,6,7,8...
l.927 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[155]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.946  pos15(flare+(cap_stem-stem),-180)
                                        ;
Maybe Jackowski knows how to change them...

[156] [157])
(/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exrulett.mf
 Ok
! Square root of -44.98077 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.27 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.28 penpos1(alpha*left_stem,0)
                               ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.28 ...a*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.29 penpos3(alpha*right_stem,0)
                                ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.29 ...right_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ESE 1 SSE SSW WSW 2 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW NNW NNE E
NE 6 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 10 11 WNW NNW NN
E ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.36   --diag_end(2l,1l,1,1,1r,0)--cycle;
                                          fi % left and right diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.40 y5r-y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.45 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.46 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[65] [66] [67] [68]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.138 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.146 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.146 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.149 arm(8,9,h,beak_darkness,1.5beak_jut)
                                          ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[69]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.164 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.172 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.172 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[70] [71] [72] [73]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.281  pos5(flare+(cap_stem-stem),-180)
                                       ;
Maybe Jackowski knows how to change them...

[74]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.309 penpos3(alpha1*(stem1-tiny),0)
                                    ; penpos4(whatever,-90);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.311 penpos6(alpha2*(stem2-tiny),0)
                                    ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 SSW SSE ESE 2 ENE 3 ESE SSE SSW WSW 4 5 (WNW NNW) NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.319 ...diag_end(4r,3'r,1,.5,3'l,4l)--z4l--cycle;
                                                    % upper diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[75]
> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.338 arm(3,4,e,1.2beak_darkness,beak_jut)
                                          ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[76]
! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.368   {z6-z5}diag_in(5l,6l,1,6r)
                                  ..diag_out(7l,1,7r,8r){z8-z7}
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.368   {z6-z5}diag_in(5l,6l,1,6r)
                                  ..diag_out(7l,1,7r,8r){z8-z7}
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x-46.00012,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.368   {z6-z5}diag_in(5l,6l,1,6r)
                                  ..diag_out(7l,1,7r,8r){z8-z7}
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x-46.00012,14)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.368   {z6-z5}diag_in(5l,6l,1,6r)
                                  ..diag_out(7l,1,7r,8r){z8-z7}
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_out->...,y_)=whatever[z(SUFFIX4),z(SUFFIX5)];
                                                  z(SUFFIX4)-(EXPR3)*length(...
l.368 ...diag_in(5l,6l,1,6r)..diag_out(7l,1,7r,8r)
                                                  {z8-z7}
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-18.00012,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_out->...(EXPR3)*length(z(SUFFIX4)-(to_x,y_))*
                                                  unitvector(z(SUFFIX4)-z(SU...
l.368 ...diag_in(5l,6l,1,6r)..diag_out(7l,1,7r,8r)
                                                  {z8-z7}
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-to_x-18.00012,14)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   {
diag_out->...))*unitvector(z(SUFFIX4)-z(SUFFIX2)){
                                                  z(SUFFIX4)-z(SUFFIX2)}...{...
l.368 ...diag_in(5l,6l,1,6r)..diag_out(7l,1,7r,8r)
                                                  {z8-z7}
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.368 ...diag_in(5l,6l,1,6r)..diag_out(7l,1,7r,8r)
                                                  {z8-z7}
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_out->...,y_)=whatever[z(SUFFIX4),z(SUFFIX5)];
                                                  z(SUFFIX4)-(EXPR3)*length(...
l.370   ..z8r--diag_out(8r,1,8l,7l)
                                   {z7-z8}
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-98.00049,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_out->...(EXPR3)*length(z(SUFFIX4)-(to_x,y_))*
                                                  unitvector(z(SUFFIX4)-z(SU...
l.370   ..z8r--diag_out(8r,1,8l,7l)
                                   {z7-z8}
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-to_x-98.00049,14)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   {
diag_out->...))*unitvector(z(SUFFIX4)-z(SUFFIX2)){
                                                  z(SUFFIX4)-z(SUFFIX2)}...{...
l.370   ..z8r--diag_out(8r,1,8l,7l)
                                   {z7-z8}
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.370   ..z8r--diag_out(8r,1,8l,7l)
                                   {z7-z8}
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
l.371   if y0<=lower_notch: ..{z7-z8}z0{
                                        z5-z6}..
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.373   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonals
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.373   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x+34.00024,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.373   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonals
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x+34.00024,14)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.373   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

> 0 SSE SSW WSW 1 WNW NNW NNE ENE 2 3 ESE SSE SSW WSW 4 WNW 5 WSW 6 SSW SSE ESE
 7 ENE NNE NNW NNE ENE 8 ESE SSE SSW SSE ESE 9 ENE NNE NNW WNW 10 WSW 0 (SSW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.373   {z5-z6}diag_in(6r,5r,1,5l)--cycle;
                                            % diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[77]
! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.404   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.404   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x-96.00024,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.404   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x-96.00024,14)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.404   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.406   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.406   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x+32.00024,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.406   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x+32.00024,14)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.406   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

> 0 ESE SSE SSW WSW 1 WNW NNW NNE ENE 2 3 ESE 4 ENE NNE NNW WNW 5 WSW 0 (SSW SS
E)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.406   {z5-z6}diag_in(6r,5r,1,5l)--cycle;
                                            % diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[78] [79] [80]
! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x-11.30005,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -11.30005
>> (-0.25from_x-2.82501,3.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-0.25from_x-2.82501,3.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x-52.69995,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -52.69995
>> (-to_x-52.69995,14)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-52.69995,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.25from_x-8.47504
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x-98.9999,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -98.9999
>> (-0.5from_x-49.49995,7)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-0.5from_x-49.49995,7)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x-57,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -57
>> (-to_x-57,14)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-57,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.5from_x-49.49994
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 ENE NNE NNW WNW 2 WSW SSW SSE SSW WSW 3 (WNW NNW) NNE 4 (NNW) WNW NNW NNE E
NE 6 ESE SSE SSW SSE ESE 7 (ENE) NNE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.474 ...l,6l)--diag_end(5l,6l,.5,1,6r,5r)--cycle;
                                                    % tail
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[81] [82]
> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.534 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[83]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.563 arm(3,4,e,beak_darkness,.7beak_jut)
                                         ;  % right arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.565 arm(3,5,f,beak_darkness,-.7beak_jut)
                                          ;  % left arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[84] [85]
! Square root of -132.06673 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.599 ...tio(2,right_stem,y1-y2,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.600 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.600 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.601 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.601 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.613 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.613 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.614 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.614 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[86]
! Square root of -71.08282 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.630 ...+stem4,y1-y2,x8r-x1l+mid_corr-2apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.631 penpos1(alpha*stem1,0)
                            ; penpos2(alpha*stem1,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.631 ...s1(alpha*stem1,0); penpos2(alpha*stem1,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.632 penpos3(alpha*stem2,0)
                            ; penpos4(alpha*stem2,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.632 ...s3(alpha*stem2,0); penpos4(alpha*stem2,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.633 penpos5(alpha*stem3,0)
                            ; penpos6(alpha*stem3,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.633 ...s5(alpha*stem3,0); penpos6(alpha*stem3,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.634 penpos7(alpha*stem4,0)
                            ; penpos8(alpha*stem4,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.634 ...s7(alpha*stem4,0); penpos8(alpha*stem4,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.661 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.662 ...7,c,.6,inner_jut4,d,1/2,outer_jut)(dark);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[87]
>> 35
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...p.numeric.a_,b_;b_=(EXPR3)/(EXPR4);
                                                  a_=(EXPR2)*(EXPR2)-b_*b_;(...
l.676 alpha1=diag_ratio(1,stem1,h,x4r-x1l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1224 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.676 alpha1=diag_ratio(1,stem1,h,x4r-x1l)
                                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -2.60817
! Division by zero.
<to be read again> 
                   endgroup
l.676 alpha1=diag_ratio(1,stem1,h,x4r-x1l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> 35
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...p.numeric.a_,b_;b_=(EXPR3)/(EXPR4);
                                                  a_=(EXPR2)*(EXPR2)-b_*b_;(...
l.677 alpha2=diag_ratio(1,stem2,h,x2r-x3l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1224 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.677 alpha2=diag_ratio(1,stem2,h,x2r-x3l)
                                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -2.53577
! Division by zero.
<to be read again> 
                   endgroup
l.677 alpha2=diag_ratio(1,stem2,h,x2r-x3l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.678 penpos1(alpha1*stem1,0)
                             ; penpos2(alpha2*stem2,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.678 ...(alpha1*stem1,0); penpos2(alpha2*stem2,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.679 penpos3(alpha2*stem2,0)
                             ; penpos4(alpha1*stem1,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.679 ...(alpha2*stem2,0); penpos4(alpha1*stem1,0)
                                                  ;
Maybe Jackowski knows how to change them...

>> %CAPSULE12875
>> (-x0-79.56241,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE12875
>> (0.9x13+0.1x0-11.72353,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.9x13-0.1x0+11.72353,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 11.72353
>> (-0.9x13-0.1x0+11.72353,14)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-0.9x13-0.1x0+11.72353,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+72.56241
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0-79.56241
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.9x13+0.1x0-11.72353
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.9x13+0.1x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.9x13+0.1x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.685  fill diag_end(12,1r,.5,1,1l,13')--z13'--
                                               diag_end(13',3l,1,.5,3r,34')-...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9223
>> (-0.9x13-0.1x0+12.9543,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE11881
>> (x0+75.79753,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-x0-75.79753,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -75.79753
>> (-0.5x0-37.89877,7)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-0.5x0-37.89877,7)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+1.0457
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -0.9x13-0.1x0+12.9543
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0+75.79753
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x0-37.89876
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.686   --
          diag_end(34',4l,.5,1,4r,24')--z24'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE13595
>> (-x0+14.33163,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE13593
>> (0.9x24+0.1x0+76.9543,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.9x24-0.1x0-76.9543,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -76.9543
>> (-0.9x24-0.1x0-76.9543,14)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-0.9x24-0.1x0-76.9543,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-7.33163
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0+14.33163
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.9x24+0.1x0+76.9543
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.9x24+0.1x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.9x24+0.1x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.687   --
          diag_end(24',2r,1,.5,2l,12)--z12--cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10989
>> (-0.9x24-0.1x0-73.26198,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE11763
>> (x0-15.48985,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-x0+15.48985,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 15.48985
>> (-0.5x0+7.74493,7)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-0.5x0+7.74493,7)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+59.26198
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -0.9x24-0.1x0-73.26198
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-15.48985
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x0+7.74492
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.687   --diag_end(24',2r,1,.5,2l,12)--z12--
                                            cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by -28).
<to be read again> 
                   ;
l.693  prime_points_inside(1,4)
                               ; prime_points_inside(2,3);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by -28).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.693 ...nts_inside(1,4); prime_points_inside(2,3)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by -28).
<to be read again> 
                   ;
l.694  prime_points_inside(3,2)
                               ; prime_points_inside(4,1);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by -28).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.694 ...nts_inside(3,2); prime_points_inside(4,1)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x2'l+x1'r+64.3653
! Unknown relation will be considered false.
<to be read again> 
                   :
l.695 ...1'r+cap_jut+.5u+1<=lft x2'l-cap_jut-xjut:
                                                   inner_jut1=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x4'l+x3'r+64.3653
! Unknown relation will be considered false.
<to be read again> 
                   :
l.697 ...3'r+cap_jut+.5u+1<=lft x4'l-cap_jut-xjut:
                                                   inner_jut2=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12905
>> (-0.5x1'l-0.5x1'r-31.31134,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x1'l-0.5x1'r-31.31134,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,8)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x1'l-0.5x1'r-31.31134,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,14)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12900
>> (-0.5x1'l-0.5x1'r-31.31134,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r-31.31134,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r-31.31134,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2-31.31183
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE13364
>> (-0.5x1'l-0.5x1'r-31.31134,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r+31.31134
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2-0.16667x1'l-0.33334x1'r-23.23853
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE13291
>> (-0.5x1'l-0.5x1'r-31.31134,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x2'l-0.5x1'r-13.26923
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x1'l-0.5x1'r-31.31134,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,8)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x1'l-0.5x1'r-31.31134,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,14)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10413
>> (-0.5x1'l-0.5x1'r-31.31134,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r-31.31134,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r-31.31134,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2-31.31085
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9593
>> (-0.5x1'l-0.5x1'r-31.31134,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r+31.31134
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.b2+0.16667x2'l-0.16667x1'l-14.86006
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x2'l+0.5x1'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l-0.5x1'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x1'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x1'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12250
>> (-0.5x4'l-0.5x4'r-33.91945,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x3'r+13.26923
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x4'l-0.5x4'r-33.91945,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,8)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-33.91945,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,14)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE11545
>> (-0.5x4'l-0.5x4'r-33.91945,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-33.91945,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-33.91945,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-33.91896
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11859
>> (-0.5x4'l-0.5x4'r-33.91945,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+33.91945
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.c2-0.33333x4'l+0.16667x4'r+0.16667x3'r-6.8832
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x3'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x3'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x3'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x3'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12838
>> (-0.5x4'l-0.5x4'r-33.91945,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x4'l-0.5x4'r-33.91945,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,8)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-33.91945,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,14)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE13379
>> (-0.5x4'l-0.5x4'r-33.91945,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-33.91945,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-33.91945,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-33.91896
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11628
>> (-0.5x4'l-0.5x4'r-33.91945,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+33.91945
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.d2-0.33334x4'l-0.16667x4'r-20.249
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11433
>> (-0.5x2'l-0.5x2'r-31.42162,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x2'l+0.5x1'r+13.26923
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x2'l-0.5x2'r-31.42162,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.e2,8)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x2'l-0.5x2'r-31.42162,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x2'r,14)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE13651
>> (-0.5x2'l-0.5x2'r-31.42162,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x2'l-0.5x2'r-31.42162,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x2'l-0.5x2'r-31.42162,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.e2-31.42113
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE13773
>> (-0.5x2'l-0.5x2'r-31.42162,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.e2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r+31.42162
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.e2-0.33333x2'l+0.16667x2'r+0.16667x1'r-6.0506
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.e2-0.5x2'l+x2'r+0.5x1'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'l+0.5x1'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'l+x2'r+0.5x1'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'l+x2'r+0.5x1'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9223
>> (-0.5x2'l-0.5x2'r-31.42162,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x2'l-0.5x2'r-31.42162,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.f2,8)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x2'l-0.5x2'r-31.42162,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x2'r,14)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10830
>> (-0.5x2'l-0.5x2'r-31.42162,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x2'l-0.5x2'r-31.42162,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x2'l-0.5x2'r-31.42162,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.f2-31.42113
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10846
>> (-0.5x2'l-0.5x2'r-31.42162,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.f2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r+31.42162
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.f2-0.25x2'l-12.16454
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.f2+x2'r+14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2'r+14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2'r+14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11744
>> (-0.5x3'l-0.5x3'r-28.88606,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x3'l-0.5x3'r-28.88606,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.g2,8)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x3'l-0.5x3'r-28.88606,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x3'l,14)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE13246
>> (-0.5x3'l-0.5x3'r-28.88606,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x3'l-0.5x3'r-28.88606,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x3'l-0.5x3'r-28.88606,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.g2-28.88655
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10383
>> (-0.5x3'l-0.5x3'r-28.88606,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.g2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r+28.88606
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.g2-0.25x3'r-17.98929
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.g2+x3'l-14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x3'l-14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x3'l-14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12225
>> (-0.5x3'l-0.5x3'r-28.88606,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x3'r-13.26923
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x3'l-0.5x3'r-28.88606,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.h2,8)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x3'l-0.5x3'r-28.88606,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x3'r,14)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE13045
>> (-0.5x3'l-0.5x3'r-28.88606,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x3'l-0.5x3'r-28.88606,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x3'l-0.5x3'r-28.88606,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.h2-28.88557
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9453
>> (-0.5x3'l-0.5x3'r-28.88606,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.h2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r+28.88606
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.h2+0.16667x4'l-0.16667x3'l-14.05165
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.h2+0.5x4'l+0.5x3'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x3'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x3'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x3'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[88]
>> 62.9389
! Division by zero.
<to be read again> 
                   ;
l.716 dy=y1-y2; alpha=((x2l-x1l)++dy)/dy;
                                         
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.725 else: fill z0--
                     diag_end(0,4l,1,1,4r,3r)--z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10383
>> (-x0-2280.80054,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-77.9389,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -77.9389
>> (-to_x-77.9389,14)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-77.9389,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+2266.80054
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0-2280.80054
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.726     --diag_end(5r,6r,1,1,6l,5l)
                                     --z5l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.726     --diag_end(5r,6r,1,1,6l,5l)
                                     --z5l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE9883
>> (x0-2216.80054,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 14).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+13.9389,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 13.9389
>> (-from_x+13.9389,14)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x+13.9389,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0+2216.80054,14)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 2216.80054
>> (-x0+2216.80054,14)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0+2216.80054,14)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-2216.80054
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 28).
<to be read again> 
                   ;
l.729  prime_points_inside(1,2)
                               ; prime_points_inside(4,3); prime_points_insi...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 28).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.729 ...nts_inside(1,2); prime_points_inside(4,3)
                                                  ; prime_points_inside(6,5);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...le(z(SUFFIX1)-z(SUFFIX0))+
                                                  90;fi.z(SUFFIX0)'l+(pen_lf...
l.729 ...nts_inside(4,3); prime_points_inside(6,5)
                                                  ;
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Inconsistent equation (off by 28).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.729 ...nts_inside(4,3); prime_points_inside(6,5)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r+64.3653
! Unknown relation will be considered false.
<to be read again> 
                   :
l.730  if rt x1'r+cap_jut+.5u+1<=lft x4'l-cap_jut:
                                                   inner_jut=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11879
>> (-0.5x1'l-0.5x1'r+1052.43082,14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x1'l+0.5x1'r-1052.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,-8)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-1052.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,-14)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10585
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2+1052.43033
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9363
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-1052.43082
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2+0.5x1'l+0.33334x1'r-703.99004
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11429
>> (-0.5x1'l-0.5x1'r+1052.43082,14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x1'r-13.26923
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x1'l+0.5x1'r-1052.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,-8)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-1052.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-14)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12612
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2+1052.4313
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE13759
>> (0.5x1'l+0.5x1'r-1052.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-1052.43082
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l+0.25x1'l+0.375x1'r-529.53271
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12636
>> (-0.5x4'l-0.5x4'r-1115.43082,14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x1'r+13.26923
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x4'l+0.5x4'r+1115.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,-8)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+1115.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-14)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9259
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-1115.43033
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9652
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+1115.43082
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2+0.05x4'l+0.5x4'r+0.15001x1'r+450.14633
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+13.26923
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10697
>> (-0.5x4'l-0.5x4'r-1115.43082,14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 8).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x4'l+0.5x4'r+1115.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,-8)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+1115.43082,-14)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-14)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12876
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-1115.43033
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10573
>> (0.5x4'l+0.5x4'r+1115.43082,-14)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -14).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+1115.43082
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2+0.25x4'l+0.5x4'r+561.26167
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+14.18507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[89]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.751 penpos1(alpha*(z_stem-tiny),0)
                                    ; penpos2(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.751 ...-tiny),0); penpos2(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.752 penpos3(alpha*(z_stem-tiny),0)
                                    ; penpos4(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.752 ...-tiny),0); penpos4(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.759 arm(5,6,a,beak_darkness**.8,-.4beak_jut)
                                              ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.762 arm(7,8,b,beak_darkness**.9,.6beak_jut)
                                             ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[90]) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exbraces.mf
 Ok [94] [126] [23] [40] [41] [60] [124] [62] [91] [93] [92] [123] [125]
[95] [127] [32])
(/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/expunct.mf
 Ok [14] [15] [19] [20]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.126 comma(1,a,pdot_diam,.2u,comma_depth)
                                          ;  % dot and tail
Maybe Jackowski knows how to change them...

[13]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.135 comma(1,a,pdot_diam,.25u,comma_depth)
                                           ; % left dot and tail
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.136 comma(2,b,pdot_diam,.25u,comma_depth)
                                           ; % right dot and tail
Maybe Jackowski knows how to change them...

[18]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.143 pickup tiny.nib; pos3(pdot_diam,0)
                                        ; pos4(pdot_diam,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.143 ...ib; pos3(pdot_diam,0); pos4(pdot_diam,90)
                                                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.147 pickup fine.nib; pos1(pdot_diam,0)
                                        ; pos2(bot_width,0);
Maybe Jackowski knows how to change them...

> 0 NNE 1 (NNW WNW) WSW 2 (SSW) SSE 3 SSW WSW 4 WNW NNW NNE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.152  filldraw z1r...z0...z1l---z2l--z2r---cycle;
                                                   fi  % stem and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[33]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.162 ...1,a,pdot_diam,.28u,vround 1.5comma_depth)
                                                  ;  % large comma
Maybe Jackowski knows how to change them...

[39]
! angle(0,0) is taken as zero.
<for(-90)> ...ic.theta;theta=angle(z[(EXPR0)]-z0);
                                                  fill.z0+0.5(0,-thin_join)r...
l.179 ...(0,thin_join)rotated theta--cycle; endfor
                                                    % diagonal at angle |d|
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! angle(0,0) is taken as zero.
<for(90)> ...ric.theta;theta=angle(z[(EXPR0)]-z0);
                                                  fill.z0+0.5(0,-thin_join)r...
l.179 ...(0,thin_join)rotated theta--cycle; endfor
                                                    % diagonal at angle |d|
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

[42] [43]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.194 comma(1,a,pdot_diam,.2u,comma_depth)
                                          ;  % dot and tail
Maybe Jackowski knows how to change them...

[44]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.200 pos1(pdot_diam,0)
                       ; pos2(pdot_diam,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.200 pos1(pdot_diam,0); pos2(pdot_diam,90)
                                           ;
Maybe Jackowski knows how to change them...

[46] [47]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.217 pos1(pdot_diam,0)
                       ; pos2(pdot_diam,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.217 pos1(pdot_diam,0); pos2(pdot_diam,90)
                                           ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.219 pos3(pdot_diam,0)
                       ; pos4(pdot_diam,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.219 pos3(pdot_diam,0); pos4(pdot_diam,90)
                                           ;
Maybe Jackowski knows how to change them...

[58]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.227 pos1(pdot_diam,0)
                       ; pos2(pdot_diam,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.227 pos1(pdot_diam,0); pos2(pdot_diam,90)
                                           ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.230 comma(3,a,pdot_diam,.2u,comma_depth)
                                          ;  % lower dot and tail
Maybe Jackowski knows how to change them...

[59] [61]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

ammoc->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.251 ...1,a,pdot_diam,.28u,vround 1.5comma_depth)
                                                  ;  % large ammoc
Maybe Jackowski knows how to change them...

[96]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.260 pickup tiny.nib; pos3(pdot_diam,0)
                                        ; pos4(pdot_diam,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.260 ...ib; pos3(pdot_diam,0); pos4(pdot_diam,90)
                                                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.264 pickup fine.nib; pos1(pdot_diam,0)
                                        ; pos2(top_width,0);
Maybe Jackowski knows how to change them...

> 0 SSW 1 (SSE ESE) ENE 2 (NNE) NNW 3 NNE ENE 4 ESE SSE SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.269  filldraw z1l...z0...z1r---z2r--z2l---cycle;
                                                   fi  % stem and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[189]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.279 comma(1,a,pdot_diam,.25u,comma_depth)
                                           ; % left dot and tail
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.280 comma(2,b,pdot_diam,.25u,comma_depth)
                                           ; % right dot and tail
Maybe Jackowski knows how to change them...

[17] [45]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

ammoc->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.300 ammoc(1,a,pdot_diam,.25u,comma_depth)
                                           ; % left dot and tail
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

ammoc->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.301 ammoc(2,b,pdot_diam,.25u,comma_depth)
                                           ; % right dot and tail
Maybe Jackowski knows how to change them...

[16] [21] [22])
(/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exsign.mf
 Ok [24]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.52 if serifs: pickup crisp.nib; pos1(flare,0)
                                               ; pos2(vair,0);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.53  pos3(flare,0)
                   ; pos4(vair,0);
Maybe Jackowski knows how to change them...

> 0 SSE SSW WSW WNW NNW NNE 1 2 (NNW WNW) WSW 3 (SSW) SSE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.54  y1+.5stem=h; filldraw circ_stroke z1e--z2e;
                                                   % left stem and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 SSE SSW WSW WNW NNW NNE 1 2 (NNW WNW) WSW 3 (SSW) SSE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.55  filldraw circ_stroke z3e--z4e;
                                      % right stem and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[34] [35]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.99  pos10(flare,0)
                    ; pos9(flare,180);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.99  pos10(flare,0); pos9(flare,180)
                                     ;
Maybe Jackowski knows how to change them...

[36] [37]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.156 pos10(vair,270); pos11(.5[vair,flare],360)
                                                ;
Maybe Jackowski knows how to change them...

[64]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.180 pos0(flare,0)
                   ; pos1(hair,0); pos2(vair,90); pos3(stem,180);
Maybe Jackowski knows how to change them...

> 0 ENE 1 NNE 2 ENE 3 ESE SSE ESE ENE NNE 4 NNW WNW WSW SSW SSE ESE 5 ENE NNE N
NW WNW NNW NNE ENE 6 ESE SSE SSW WSW WNW NNW 7 (NNE) ENE 8 (ESE) SSE ESE ENE NN
E NNW WNW 9 WSW SSW SSE ESE SSE SSW WSW 10 WNW NNW NNE ENE ESE SSE 11 SSW WSW W
NW NNW WNW 12 WSW SSW 13 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.192  ..{right}z8e...{up}z9e;
                                % loop and arm
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[191]
> 0 NNE 1 ENE NNE 2 (NNW WNW) WSW 3 SSW WSW 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.219  bulb(2,1,0)
                  ; bulb(8,9,10);  % bulbs
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 SSW 1 WSW SSW 2 (SSE ESE) ENE 3 NNE ENE 0 (ESE SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.219  bulb(2,1,0); bulb(8,9,10)
                                ;  % bulbs
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[159]) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exromp.mf
 Ok
> 0 ENE 1 2 NNE NNW WNW 3 (NNW) NNE 4 (ENE) ESE SSE SSW WSW 5 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.31  filldraw stroke z0e---z1e...{left}z2e;
                                              % short diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[38]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.68 pickup tiny.nib; pos7(dot_size,0)
                                      ; pos8(dot_size,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.68 ...y.nib; pos7(dot_size,0); pos8(dot_size,90)
                                                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.79 if serifs: pos1(hair,180); pos0(flare,180)
                                               ;
Maybe Jackowski knows how to change them...

[63]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.89 pickup tiny.nib; pos7(dot_size,0)
                                      ; pos8(dot_size,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.89 ...y.nib; pos7(dot_size,0); pos8(dot_size,90)
                                                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.100 if serifs: pos1(hair,0); pos0(flare,0)
                                            ;
Maybe Jackowski knows how to change them...

[190]) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exrdigit.mf
 Ok [48] [49]
> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.65 arm(7,8,a,.3beak_darkness,beak_jut)
                                        ;  % arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.69  pos0(bulb_diam,180)
                         ; pos1(cap_hair,180);
Maybe Jackowski knows how to change them...

[50]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.109  pos0(bulb_diam1,180)
                           ; pos1(hair,180);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.112  pos10(bulb_diam2,-180)
                             ; pos9(cap_hair,-180);
Maybe Jackowski knows how to change them...

[51]
! Square root of -0.1096 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.139 ...ha=diag_ratio(1,diag_stem,y3-y4l,x3r-x4l)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.140 penpos3(alpha*diag_stem,0)
                                ; penpos4(alpha*diag_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.140 ...*diag_stem,0); penpos4(alpha*diag_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

[52]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.178  pos10(flare+1/3(cap_stem-stem),-180)
                                           ; bulb(8,9,10);  % bulb
Maybe Jackowski knows how to change them...

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.185  arm(1,2,a,0,0)
                     ;  % arm
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[53]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.219 if serifs: pos1(hair,-360); pos0(flare,-360)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 NNE 1 2 (NNW WNW) WSW 3 (SSW) SSE ESE SSE SSW WSW 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.222  {{less_tense; bulb(2,1,0)
                                }};  % arc and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[54]
> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.241 arm(2,1,a,.3beak_darkness,-beak_jut)
                                          ;  % arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 SSW 2 WSW 3 (WNW NNW) NNE 4 ENE 5 6 NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.244 arm(2',3,b,beak_darkness,x3r-x.a0)
                                        ;  % upward extension of beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW NNW NNE ENE ESE SSE 2 (SSW) WSW 3 (WNW) NNW WNW WSW SSW
 SSE ESE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.252  filldraw stroke z4e...{down}z6e;
                                         % stroke
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[55] [56]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.328 if serifs: pos1(hair,-180); pos0(flare,-180)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 SSW 1 2 (SSE ESE) ENE 3 (NNE) NNW WNW NNW NNE ENE 0 (ESE SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.331  {{less_tense; bulb(2,1,0)
                                }};  % arc and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[57]) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/expseudo.mf
 Ok) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/excspl.mf
 Ok [25] [26]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.65 arm(3,4,e,beak_darkness,beak_jut)
                                      ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.73 arm(5,6,f,beak_darkness,0)
                               ; arm(0,7,g,beak_darkness,0);  % middle arm a...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.73 ...ak_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[27]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.91 arm(3,4,e,beak_darkness,beak_jut)
                                      ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.99 arm(5,6,f,beak_darkness,0)
                               ; arm(0,7,g,beak_darkness,0);  % middle arm a...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.99 ...ak_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[28]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.125 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.133 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.133 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.143 arm(13,14,eee,1.2beak_darkness,beak_jut)
                                              ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[29]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.161 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.169 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.169 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[30]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.196 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.204 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.204 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.216 arm(13,14,eee,1.2beak_darkness,beak_jut)
                                              ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[31] [158]) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exrulett.mf
 Ok
! Square root of -21.00702 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.27 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.28 penpos1(alpha*left_stem,0)
                               ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.28 ...a*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.29 penpos3(alpha*right_stem,0)
                                ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.29 ...right_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ESE 1 (ENE NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE SSW) WSW 0 (SSW SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.40 y5r-y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.45 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.45 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.46 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.46 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[97] [98] [99] [100]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.138 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.146 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.146 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.149 arm(8,9,h,beak_darkness,1.5beak_jut)
                                          ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[101]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.164 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.172 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.172 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[102] [103] [104] [105] [106]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.309 penpos3(alpha1*(stem1-tiny),0)
                                    ; penpos4(whatever,-90);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.311 penpos6(alpha2*(stem2-tiny),0)
                                    ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 SSW SSE ESE 2 ENE 3 ESE SSE SSW WSW 4 5 (WNW NNW) NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.319 ...diag_end(4r,3'r,1,.5,3'l,4l)--z4l--cycle;
                                                    % upper diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[107]
> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.338 arm(3,4,e,1.2beak_darkness,beak_jut)
                                          ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[108]
> 0 WNW (NNW NNE ENE) ESE (SSE SSW WSW) WNW 1 NNW NNE ENE 2 (NNE NNW WNW) WSW (
SSW SSE ESE) ENE 3 ESE SSE SSW WSW 4 (WNW NNW NNE) ENE (ESE SSE SSW) WSW 5 (SSW
 SSE ESE) ENE 6 (NNE NNW) WNW NNW NNE ENE 7 (ESE SSE SSW) WSW (SSW SSE ESE) ENE
 8 ESE (ENE NNE NNW) WNW (WSW SSW SSE) ESE 9 SSE SSW WSW 10 (SSW SSE ESE) ENE 0
 (NNE NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.373   {z5-z6}diag_in(6r,5r,1,5l)--cycle;
                                            % diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[109] [110] [111] [112] [113] [114]
> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.534 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[115]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.563 arm(3,4,e,beak_darkness,.7beak_jut)
                                         ;  % right arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.565 arm(3,5,f,beak_darkness,-.7beak_jut)
                                          ;  % left arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[116] [117]
! Square root of -11.12509 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.599 ...tio(2,right_stem,y1-y2,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.600 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.600 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.601 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.601 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.613 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.613 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.614 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.614 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[118]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.631 penpos1(alpha*stem1,0)
                            ; penpos2(alpha*stem1,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.631 ...s1(alpha*stem1,0); penpos2(alpha*stem1,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.632 penpos3(alpha*stem2,0)
                            ; penpos4(alpha*stem2,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.632 ...s3(alpha*stem2,0); penpos4(alpha*stem2,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.633 penpos5(alpha*stem3,0)
                            ; penpos6(alpha*stem3,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.633 ...s5(alpha*stem3,0); penpos6(alpha*stem3,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.634 penpos7(alpha*stem4,0)
                            ; penpos8(alpha*stem4,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.634 ...s7(alpha*stem4,0); penpos8(alpha*stem4,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.661 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.661 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.662 ...7,c,.6,inner_jut4,d,1/2,outer_jut)(dark);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.662 ...7,c,.6,inner_jut4,d,1/2,outer_jut)(dark);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[119]
! Square root of -7.50697 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.676 alpha1=diag_ratio(1,stem1,h,x4r-x1l)
                                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! Square root of -7.50697 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.677 alpha2=diag_ratio(1,stem2,h,x2r-x3l)
                                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.678 penpos1(alpha1*stem1,0)
                             ; penpos2(alpha2*stem2,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.678 ...(alpha1*stem1,0); penpos2(alpha2*stem2,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.679 penpos3(alpha2*stem2,0)
                             ; penpos4(alpha1*stem1,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.679 ...(alpha2*stem2,0); penpos4(alpha1*stem1,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[120]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.717 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.717 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.718 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.718 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

[121]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.751 penpos1(alpha*(z_stem-tiny),0)
                                    ; penpos2(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.751 ...-tiny),0); penpos2(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.752 penpos3(alpha*(z_stem-tiny),0)
                                    ; penpos4(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.752 ...-tiny),0); penpos4(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.759 arm(5,6,a,beak_darkness**.8,-.4beak_jut)
                                              ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.762 arm(7,8,b,beak_darkness**.9,.6beak_jut)
                                             ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[122]) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exruwest.mf
 Ok
! Square root of -21.33606 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
<for(1)> ...o(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;penpos1(alpha*left_stem,0...
l.87 repeat_once
                ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...-apex_corr);penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...eft_stem,0);penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ft_stem,0);penpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ht_stem,0);penpos4(alpha*right_stem,0)
                                                  ;z0=whatever[z1r,z2r]=what...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ....serifs:0.75u.else:0.25u.fi;put_gravis
                                                  ; ENDFOR
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ....serifs:0.75u.else:0.25u.fi;put_gravis
                                                  ; ENDFOR
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! Square root of -21.00702 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
<for(%CAPSULE11843)> ...m,y2-y1,x4r-x1l-apex_corr)
                                                  ;penpos1(alpha*left_stem,0...
l.87 repeat_once
                ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11843)> ...penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11843)> ...penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11843)> ...enpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11843)> ...enpos4(alpha*right_stem,0)
                                                  ;z0=whatever[z1r,z2r]=what...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

> 0 ESE 1 (ENE NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE SSW) WSW 0 (SSW SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE11843)> ...p_band;penstroke.z5e--z6e;
                                                  if.serifs:numeric.inner_ju...
l.87 repeat_once
                ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE11843)> ...ut,b,0.6,inner_jut)(dark);
                                                  dish_serif(4',3,c,1/2,inne...
l.87 repeat_once
                ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE11843)> ...ut,b,0.6,inner_jut)(dark);
                                                  dish_serif(4',3,c,1/2,inne...
l.87 repeat_once
                ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE11843)> ...nner_jut,d,1/3,outer_jut);
                                                  fi.hpos_corr=if.not.serifs...
l.87 repeat_once
                ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE11843)> ...nner_jut,d,1/3,outer_jut);
                                                  fi.hpos_corr=if.not.serifs...
l.87 repeat_once
                ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11843)> ...u.else:0.25u.fi;put_gravis
                                                  ; ENDFOR
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11843)> ...u.else:0.25u.fi;put_gravis
                                                  ; ENDFOR
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

[224]
! Square root of -21.33606 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
<for(1)> ...o(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;penpos1(alpha*left_stem,0...
l.124 repeat_once
                 ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...-apex_corr);penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...eft_stem,0);penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ft_stem,0);penpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ht_stem,0);penpos4(alpha*right_stem,0)
                                                  ;z0=whatever[z1r,z2r]=what...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...nospace:hpos_corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...nospace:hpos_corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! Square root of -21.00702 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
<for(%CAPSULE10466)> ...m,y2-y1,x4r-x1l-apex_corr)
                                                  ;penpos1(alpha*left_stem,0...
l.124 repeat_once
                 ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE10466)> ...penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE10466)> ...penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE10466)> ...enpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE10466)> ...enpos4(alpha*right_stem,0)
                                                  ;z0=whatever[z1r,z2r]=what...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 ESE 1 (ENE NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE SSW) WSW 0 (SSW SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE10466)> ...p_band;penstroke.z5e--z6e;
                                                  if.serifs:numeric.inner_ju...
l.124 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10466)> ...ut,b,0.6,inner_jut)(dark);
                                                  dish_serif(4',3,c,1/2,inne...
l.124 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10466)> ...ut,b,0.6,inner_jut)(dark);
                                                  dish_serif(4',3,c,1/2,inne...
l.124 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10466)> ...nner_jut,d,1/3,outer_jut);
                                                  fi.if.not.monospace:hpos_c...
l.124 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10466)> ...nner_jut,d,1/3,outer_jut);
                                                  fi.if.not.monospace:hpos_c...
l.124 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10466)> ..._corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10466)> ..._corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[225]
! Square root of -21.00702 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.135 ...atio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.136 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.136 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.137 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.137 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ESE 1 (ENE NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE SSW) WSW 0 (SSW SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.148 ...y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.153 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.153 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.154 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.154 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[226]
! Square root of -21.00702 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.168 ...atio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.169 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.169 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.170 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.170 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ESE 1 (ENE NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE SSW) WSW 0 (SSW SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.181 ...y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.186 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.186 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.187 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.187 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by -57.00146).
<to be read again> 
                   ;
uppercase_tilde->...)]l);delta=whatever*dir.theta;
                                                  filldraw.z[(EXPR4)]l..cont...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> xpart delta+7
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-67.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-72
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta+2.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[227]
! Square root of -21.00702 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.201 ...atio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.202 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.202 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.203 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.203 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ESE 1 (ENE NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE SSW) WSW 0 (SSW SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.214 ...y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.219 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.219 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.220 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.220 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[228]
! Square root of -21.00702 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.233 ...atio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.234 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.234 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.235 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.235 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ESE 1 (ENE NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE SSW) WSW 0 (SSW SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.246 ...y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.251 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.251 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.252 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.252 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...enpos[(EXPR5)](circ_hair,180)
                                                  ;penpos[(EXPR7)](circ_hair...
l.254 uppercase_circle(x2,y2,12,13,14,15)
                                         ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...;penpos[(EXPR7)](circ_hair,0)
                                                  ;x[(EXPR4)]=x[(EXPR6)]=(EX...
l.254 uppercase_circle(x2,y2,12,13,14,15)
                                         ;
Maybe Jackowski knows how to change them...

[229]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.269 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.277 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.277 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.280 arm(8,9,h,beak_darkness,1.5beak_jut)
                                          ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Square root of -0.5625 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.284 ...iag_ratio(1,.5left_stem,y12-y11,x12-x11l)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.285 penpos11(alpha*left_stem,0)
                                 ; penpos12(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.285 ...left_stem,0); penpos12(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.289 fill z10--(x1,y10)--(x1,h)--z12--cycle;
                                               % link
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[230] [231]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...t(0,0.5ic#);hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.365 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...t(0,0.5ic#);hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.365 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE12084)> ...,e,beak_darkness,beak_jut)
                                                  ;pos5(cap_bar,-90);pos6(ha...
l.365 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE12084)> ...arm(5,6,f,beak_darkness,0)
                                                  ;arm(0,7,g,beak_darkness,0...
l.365 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE12084)> ...arm(0,7,g,beak_darkness,0)
                                                  ;pos8(slab.if.not.serifs:+...
l.365 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE12084)> ...beak_darkness,1.5beak_jut)
                                                  ;if.serifs:nodish_serif(1,...
l.365 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12084)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.365 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12084)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.365 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[232]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ap_jut,d,1/3,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ap_jut,d,1/3,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE11600)> ...,e,beak_darkness,beak_jut)
                                                  ;pos5(cap_bar,-90);pos6(ha...
l.393 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE11600)> ...arm(5,6,f,beak_darkness,0)
                                                  ;arm(0,7,g,beak_darkness,0...
l.393 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE11600)> ...arm(0,7,g,beak_darkness,0)
                                                  ;pos8(slab.if.not.serifs:+...
l.393 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE11600)> ...beak_darkness,1.5beak_jut)
                                                  ;if.serifs:nodish_serif(1,...
l.393 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11600)> ...,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11600)> ...,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[233]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.408 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.416 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.416 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.419 arm(8,9,hh,beak_darkness,1.5beak_jut)
                                           ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[234]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.438 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.446 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.446 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.449 arm(8,9,hh,beak_darkness,1.5beak_jut)
                                           ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[235]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...it(0,0.5ic#);hpos_corr=0.5u;put_gravis
                                                  ; ENDFOR
l.482 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...it(0,0.5ic#);hpos_corr=0.5u;put_gravis
                                                  ; ENDFOR
l.482 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9493)> ...);hpos_corr=0.5u;put_gravis
                                                  ; ENDFOR
l.482 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9493)> ...);hpos_corr=0.5u;put_gravis
                                                  ; ENDFOR
l.482 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[236]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ce:hpos_corr=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ce:hpos_corr=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12195)> ...=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12195)> ...=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[237] [238] [239] [240]
! Inconsistent equation (off by -57.00146).
<to be read again> 
                   ;
uppercase_tilde->...)]l);delta=whatever*dir.theta;
                                                  filldraw.z[(EXPR4)]l..cont...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> xpart delta+7
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-67.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-72
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta+2.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[241]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,ic#-0.5u#);hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.649 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...,ic#-0.5u#);hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.649 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11414)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.649 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11414)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.649 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[242]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...s(1,2,3,4);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...s(1,2,3,4);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11592)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11592)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[243] [244]
! Inconsistent equation (off by -57.00146).
<to be read again> 
                   ;
uppercase_tilde->...)]l);delta=whatever*dir.theta;
                                                  filldraw.z[(EXPR4)]l..cont...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> xpart delta+7
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-67.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-72
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta+2.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[245] [246]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.744 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.752 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.752 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.755 arm(8,9,h,beak_darkness,1.5beak_jut)
                                          ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[247] [248]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...#-0.5u#,0));hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.812 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...#-0.5u#,0));hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.812 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11592)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.812 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11592)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.812 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[249]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...jut,d,1/2,cap_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...jut,d,1/2,cap_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE13070)> ...p_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE13070)> ...p_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[250] [251] [252]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...1l)++dy)/dy;penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...eft_stem,0);penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ft_stem,0);penpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ht_stem,0);penpos4(alpha*right_stem,0)
                                                  ;penpos5(left_stem,0);penp...
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...3,cap_jut,f,1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...3,cap_jut,f,1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9344)> ...;penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9344)> ...;penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9344)> ...penpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9344)> ...penpos4(alpha*right_stem,0)
                                                  ;penpos5(left_stem,0);penp...
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9344)> ...,1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9344)> ...,1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[253] [254]
> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.970 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[255]) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exrueast.mf
 Ok
! Square root of -21.00702 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.66 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.67 penpos1(alpha*left_stem,0)
                               ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.67 ...a*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.68 penpos3(alpha*right_stem,0)
                                ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.68 ...right_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ESE 1 (ENE NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE SSW) WSW 0 (SSW SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.79 y5r-y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.84 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.84 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.85 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.85 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_breve->...os[(EXPR5)](mid_thickness,-90)
                                                  ;bot.y[(EXPR5)]r=cap_heigh...
l.87 uppercase_breve(x2,0,12,13,14)
                                   ;
Maybe Jackowski knows how to change them...

[160]
! Square root of -21.00702 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.100 ...atio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.101  penpos1(alpha*left_stem,0)
                                 ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.101 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.102  penpos3(alpha*right_stem,0)
                                  ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.102 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ESE 1 (ENE NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE SSW) WSW 0 (SSW SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.113 ...y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.118 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                   % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.118 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                   % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.119 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.119 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );y_right':=ypart(bot(dire...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );if.abs(x_down'-x_down,y_...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

ERROR: `ogonek' iteration hasn't converged! Final values:
x_down=-43.28726 (should be -10)
y_right=-0.00024 (should be 0)
! Probably, you have to change somehow the boundary values.
<to be read again> 
                   ;
put_ogonek->...hange somehow the boundary values";
                                                  fi.z[ii]l=z_a;z[ii]'l=lo.z...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

>> -1.66626
! Division by zero.
<to be read again> 
                   )
lo->...aled.sqrt(body_height#/higher.body_height#)
                                                  )else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...lues";fi.z[ii]l=z_a;z[ii]'l=lo.z_b;
                                                  z[jj]'l=lo.z_c;z[jj]l=lo.z...
l.128  put_ogonek(the_pen)
                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1.66626 has been replaced by 0.
lo->...led.sqrt(body_height#/higher.body_height#))
                                                  else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...lues";fi.z[ii]l=z_a;z[ii]'l=lo.z_b;
                                                  z[jj]'l=lo.z_c;z[jj]l=lo.z...
l.128  put_ogonek(the_pen)
                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -1.66626
! Division by zero.
<to be read again> 
                   )
lo->...aled.sqrt(body_height#/higher.body_height#)
                                                  )else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...=z_a;z[ii]'l=lo.z_b;z[jj]'l=lo.z_c;
                                                  z[jj]l=lo.z_d;pos[ii](max(...
l.128  put_ogonek(the_pen)
                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1.66626 has been replaced by 0.
lo->...led.sqrt(body_height#/higher.body_height#))
                                                  else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...=z_a;z[ii]'l=lo.z_b;z[jj]'l=lo.z_c;
                                                  z[jj]l=lo.z_d;pos[ii](max(...
l.128  put_ogonek(the_pen)
                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -1.66626
! Division by zero.
<to be read again> 
                   )
lo->...aled.sqrt(body_height#/higher.body_height#)
                                                  )else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...o.z_b;z[jj]'l=lo.z_c;z[jj]l=lo.z_d;
                                                  pos[ii](max(the_top_breadt...
l.128  put_ogonek(the_pen)
                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1.66626 has been replaced by 0.
lo->...led.sqrt(body_height#/higher.body_height#))
                                                  else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...o.z_b;z[jj]'l=lo.z_c;z[jj]l=lo.z_d;
                                                  pos[ii](max(the_top_breadt...
l.128  put_ogonek(the_pen)
                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

[161]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...e;penlabels(1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...e;penlabels(1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10015)> ...1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10015)> ...1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

[162] [163] [164]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.240 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.248 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.248 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.251 arm(8,9,hh,beak_darkness,1.5beak_jut)
                                           ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[165]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.269  arm(3,4,e,beak_darkness,beak_jut)
                                        ; % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.277  arm(5,6,f,beak_darkness,0)
                                 ; arm(0,7,g,beak_darkness,0); % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.277 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ; % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.280  arm(8,9,h,beak_darkness,1.5beak_jut)
                                           ; % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );y_right':=ypart(bot(dire...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );if.abs(x_down'-x_down,y_...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

ERROR: `ogonek' iteration hasn't converged! Final values:
x_down=-64.28726 (should be -31)
y_right=-0.00024 (should be 0)
! Probably, you have to change somehow the boundary values.
<to be read again> 
                   ;
put_ogonek->...hange somehow the boundary values";
                                                  fi.z[ii]l=z_a;z[ii]'l=lo.z...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

>> -1.66626
! Division by zero.
<to be read again> 
                   )
lo->...aled.sqrt(body_height#/higher.body_height#)
                                                  )else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...lues";fi.z[ii]l=z_a;z[ii]'l=lo.z_b;
                                                  z[jj]'l=lo.z_c;z[jj]l=lo.z...
l.291  put_ogonek(the_pen)
                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1.66626 has been replaced by 0.
lo->...led.sqrt(body_height#/higher.body_height#))
                                                  else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...lues";fi.z[ii]l=z_a;z[ii]'l=lo.z_b;
                                                  z[jj]'l=lo.z_c;z[jj]l=lo.z...
l.291  put_ogonek(the_pen)
                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -1.66626
! Division by zero.
<to be read again> 
                   )
lo->...aled.sqrt(body_height#/higher.body_height#)
                                                  )else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...=z_a;z[ii]'l=lo.z_b;z[jj]'l=lo.z_c;
                                                  z[jj]l=lo.z_d;pos[ii](max(...
l.291  put_ogonek(the_pen)
                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1.66626 has been replaced by 0.
lo->...led.sqrt(body_height#/higher.body_height#))
                                                  else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...=z_a;z[ii]'l=lo.z_b;z[jj]'l=lo.z_c;
                                                  z[jj]l=lo.z_d;pos[ii](max(...
l.291  put_ogonek(the_pen)
                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -1.66626
! Division by zero.
<to be read again> 
                   )
lo->...aled.sqrt(body_height#/higher.body_height#)
                                                  )else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...o.z_b;z[jj]'l=lo.z_c;z[jj]l=lo.z_d;
                                                  pos[ii](max(the_top_breadt...
l.291  put_ogonek(the_pen)
                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1.66626 has been replaced by 0.
lo->...led.sqrt(body_height#/higher.body_height#))
                                                  else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...o.z_b;z[jj]'l=lo.z_c;z[jj]l=lo.z_d;
                                                  pos[ii](max(the_top_breadt...
l.291  put_ogonek(the_pen)
                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

[166]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_breve->...os[(EXPR5)](mid_thickness,-90)
                                                  ;bot.y[(EXPR5)]r=cap_heigh...
l.341 uppercase_breve(x2,0,10,11,12)
                                    ;
Maybe Jackowski knows how to change them...

[167]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ound.max(2u,3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ound.max(2u,3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE13362)> ...1.2beak_darkness,beak_jut)
                                                  ;if.serifs:dish_serif(1,2,...
l.359 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE13362)> ...3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE13362)> ...3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[168]
> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.371 arm(3,4,e,1.2beak_darkness,beak_jut)
                                          ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...

dtl_hachek->...t_diam,0.25accent_u,2/3comma_depth)
                                                  ;penlabels(51);
l.375 dtl_hachek(x4-pdot_diam)(y1+.5pdot_diam)
                                              ;
Maybe Jackowski knows how to change them...

[169]
> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE10267)> ...1.2beak_darkness,beak_jut)
                                                  ;if.serifs:dish_serif(1,2,...
l.393 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[170]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,4',5,6,7);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...,4',5,6,7);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11606)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11606)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[171] [172] [173]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...f.monospace:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...f.monospace:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...u;put_accent;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...u;put_accent;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE1390)> ...:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE1390)> ...:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE1390)> ...t;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE1390)> ...t;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[174]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...--cycle;fi.hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...--cycle;fi.hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10987)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10987)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[175] [176]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...6,7,8,8',9,10);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...6,7,8,8',9,10);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE10109)> ...1,10(y2-y1)}....{left}z2e;
                                                  filldraw.stroke.z7e{left}....
l.625 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10109)> ...0);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10109)> ...0);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[177]
> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.649 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[178]
> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.691 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[179]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.725 arm(3,4,e,beak_darkness,.7beak_jut)
                                         ;  % right arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.727 arm(3,5,f,beak_darkness,-.7beak_jut)
                                          ;  % left arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[180]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.745 arm(3,4,e,beak_darkness,.7beak_jut)
                                         ;  % right arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.747 arm(3,5,f,beak_darkness,-.7beak_jut)
                                          ;  % left arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[181]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...f.monospace:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...f.monospace:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...u;put_accent;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...u;put_accent;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE13362)> ...hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE13362)> ...hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE13362)> ...;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE13362)> ...;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[182]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...enpos[(EXPR5)](circ_hair,180)
                                                  ;penpos[(EXPR7)](circ_hair...
l.802 ...ght+if hefty: .5 fi accent_gap,8,9,10,11)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...;penpos[(EXPR7)](circ_hair,0)
                                                  ;x[(EXPR4)]=x[(EXPR6)]=(EX...
l.802 ...ght+if hefty: .5 fi accent_gap,8,9,10,11)
                                                  ;
Maybe Jackowski knows how to change them...

[183]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.817 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.817 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.818 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.818 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

[184]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...2r-x3l);penpos1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,4,5,6,7,8);hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...,4,5,6,7,8);hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12800)> ...os1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12800)> ...os2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12800)> ...os3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12800)> ...os4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE12800)> ...arkness**0.8,-0.4beak_jut)
                                                  ;pos7(arm_thickness2,-90);...
l.867 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE12800)> ...darkness**0.9,0.6beak_jut)
                                                  ;penlabels(1,2,3,4,5,6,7,8...
l.867 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12800)> ...hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12800)> ...hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[185]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.883 penpos1(alpha*(z_stem-tiny),0)
                                    ; penpos2(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.883 ...-tiny),0); penpos2(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.884 penpos3(alpha*(z_stem-tiny),0)
                                    ; penpos4(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.884 ...-tiny),0); penpos4(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.891 arm(5,6,a,beak_darkness**.8,-.4beak_jut)
                                              ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.894 arm(7,8,b,beak_darkness**.9,.6beak_jut)
                                             ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[186]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...2r-x3l);penpos1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE14975)> ...os1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE14975)> ...os2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE14975)> ...os3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE14975)> ...os4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE14975)> ...arkness**0.8,-0.4beak_jut)
                                                  ;pos7(arm_thickness2,-90);...
l.927 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE14975)> ...darkness**0.9,0.6beak_jut)
                                                  ;penlabels(1,2,3,4,5,6,7,8...
l.927 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[187] [188])
(/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/txpseudo.mf
 Ok) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/txaccent.mf
 Ok
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ..._beginchar;;adjust_fit(0,0);put_gravis
                                                  ; ENDFOR
l.34 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ..._beginchar;;adjust_fit(0,0);put_gravis
                                                  ; ENDFOR
l.34 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE14170)> ...adjust_fit(0,0);put_gravis
                                                  ; ENDFOR
l.34 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE14170)> ...adjust_fit(0,0);put_gravis
                                                  ; ENDFOR
l.34 repeat_once
                ;
Maybe Jackowski knows how to change them...

[0]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...fs:1.5fi.u#;adjust_fit(0,0);put_accent
                                                  ; ENDFOR
l.43 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...fs:1.5fi.u#;adjust_fit(0,0);put_accent
                                                  ; ENDFOR
l.43 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11936)> ...adjust_fit(0,0);put_accent
                                                  ; ENDFOR
l.43 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11936)> ...adjust_fit(0,0);put_accent
                                                  ; ENDFOR
l.43 repeat_once
                ;
Maybe Jackowski knows how to change them...

[1] [2]
! Inconsistent equation (off by -57.00146).
<to be read again> 
                   ;
uppercase_tilde->...)]l);delta=whatever*dir.theta;
                                                  filldraw.z[(EXPR4)]l..cont...
l.59 uppercase_tilde(0,0,1,2,3,4,5)
                                   ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> xpart delta+7
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.59 uppercase_tilde(0,0,1,2,3,4,5)
                                   ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-67.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.59 uppercase_tilde(0,0,1,2,3,4,5)
                                   ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-72
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.59 uppercase_tilde(0,0,1,2,3,4,5)
                                   ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta+2.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.59 uppercase_tilde(0,0,1,2,3,4,5)
                                   ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[3] [4]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...;if.monospace:hpos_corr=-2u;put_accent
                                                  ;hpos_corr=2u;put_accent;e...
l.75 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...;if.monospace:hpos_corr=-2u;put_accent
                                                  ;hpos_corr=2u;put_accent;e...
l.75 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...-2u;put_accent;hpos_corr=2u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.75 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...-2u;put_accent;hpos_corr=2u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.75 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE14928)> ...e:hpos_corr=-2u;put_accent
                                                  ;hpos_corr=2u;put_accent;e...
l.75 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE14928)> ...e:hpos_corr=-2u;put_accent
                                                  ;hpos_corr=2u;put_accent;e...
l.75 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE14928)> ...nt;hpos_corr=2u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.75 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE14928)> ...nt;hpos_corr=2u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.75 repeat_once
                ;
Maybe Jackowski knows how to change them...

[5]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...enpos[(EXPR5)](circ_hair,180)
                                                  ;penpos[(EXPR7)](circ_hair...
l.82 uppercase_circle(.5w,y[-1],1,2,3,4)
                                        ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...;penpos[(EXPR7)](circ_hair,0)
                                                  ;x[(EXPR4)]=x[(EXPR6)]=(EX...
l.82 uppercase_circle(.5w,y[-1],1,2,3,4)
                                        ;
Maybe Jackowski knows how to change them...

[6] [7]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_breve->...os[(EXPR5)](mid_thickness,-90)
                                                  ;bot.y[(EXPR5)]r=cap_heigh...
l.95 uppercase_breve(.5w,0,1,2,3)
                                 ;
Maybe Jackowski knows how to change them...

[8] [9] [10] [11] [12])
(/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exmligtb.mf
 Ok) ) ) ) 
Here is how much of METAFONT's memory you used:
 671 strings out of 5263
 8568 string characters out of 69788
 49258 words of memory out of 5000000
 1522 symbolic tokens out of 9500
 13i,79n,0r,23p,259b stack positions out of 300i,300n,1000r,150p,200000b
 
(You used 3w,13h,4d,1i,9l,0k,0e,16p metric file positions
  out of 256w,16h,16d,64i,15000l,2500k,256e,60p)

Font metrics written on ectc0.tfm.
Output written on ectc0.600gf (256 characters, 80104 bytes).
